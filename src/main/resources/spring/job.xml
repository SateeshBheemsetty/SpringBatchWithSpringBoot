<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">
	<bean id="report" class="initialize.springfeaturesnew.batch.model.Player" scope="prototype" />
	<bean id="itemProcessor" class="initialize.springfeaturesnew.batch.processor.PlayerCustomProcessor" />
		<bean id="jobRepository"
	class="org.springframework.batch.core.repository.support.SimpleJobRepository">
	<constructor-arg>
		<bean
			class="org.springframework.batch.core.repository.dao.MapJobInstanceDao" />
	</constructor-arg>
	<constructor-arg>
		<bean
			class="org.springframework.batch.core.repository.dao.MapJobExecutionDao" />
	</constructor-arg>
	<constructor-arg>
		<bean
			class="org.springframework.batch.core.repository.dao.MapStepExecutionDao" />
	</constructor-arg>
	<constructor-arg>  <!-- Extra constructor argument -->
		<bean
			class="org.springframework.batch.core.repository.dao.MapExecutionContextDao" />
	</constructor-arg>
	</bean>
 	

 	 <!-- stored job-meta in database 
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="mysql" />
	</bean>-->

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<batch:job id="helloPlayerJob">
	  <batch:step id="step1">
		<batch:tasklet>
			<batch:chunk reader="cvsFileItemReader" writer="xmlItemWriter"
                              processor="itemProcessor" commit-interval="10">
			</batch:chunk>
		</batch:tasklet>
	  </batch:step>
	</batch:job>
	
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="resource" value="classpath:input/csv/badges.csv" />

		<property name="lineMapper">
		    <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean
					class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="names" value="playerId,rank,score,name,tillDate" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean class="initialize.springfeaturesnew.batch.mapper.ReportFieldSetMapper" />

				 <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
				<bean
					class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
					<property name="prototypeBeanName" value="report" />
				</bean>
				 -->
			</property>
		    </bean>
		</property>

	</bean>
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:outputs/xml/player.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="player" />
	</bean>

	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	   <property name="classesToBeBound">
		<list>
			<value>initialize.springfeaturesnew.batch.model.Player</value>
		</list>
	    </property>
	</bean>

</beans>